// Generated by view binder compiler. Do not edit!
package com.elevenminuteworkout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.elevenminuteworkout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText confirnNewPass;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final EditText currentPass;

  @NonNull
  public final EditText newPass;

  @NonNull
  public final LinearLayout onChangePass;

  @NonNull
  public final Toolbar toolbarChangePasswordActivity;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText confirnNewPass, @NonNull ConstraintLayout container,
      @NonNull EditText currentPass, @NonNull EditText newPass, @NonNull LinearLayout onChangePass,
      @NonNull Toolbar toolbarChangePasswordActivity) {
    this.rootView = rootView;
    this.confirnNewPass = confirnNewPass;
    this.container = container;
    this.currentPass = currentPass;
    this.newPass = newPass;
    this.onChangePass = onChangePass;
    this.toolbarChangePasswordActivity = toolbarChangePasswordActivity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirnNewPass;
      EditText confirnNewPass = rootView.findViewById(id);
      if (confirnNewPass == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.currentPass;
      EditText currentPass = rootView.findViewById(id);
      if (currentPass == null) {
        break missingId;
      }

      id = R.id.newPass;
      EditText newPass = rootView.findViewById(id);
      if (newPass == null) {
        break missingId;
      }

      id = R.id.onChangePass;
      LinearLayout onChangePass = rootView.findViewById(id);
      if (onChangePass == null) {
        break missingId;
      }

      id = R.id.toolbar_changePassword_activity;
      Toolbar toolbarChangePasswordActivity = rootView.findViewById(id);
      if (toolbarChangePasswordActivity == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, confirnNewPass,
          container, currentPass, newPass, onChangePass, toolbarChangePasswordActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
