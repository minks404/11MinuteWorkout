// Generated by view binder compiler. Do not edit!
package com.elevenminuteworkout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.elevenminuteworkout.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBmiBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnCalculateUnits;

  @NonNull
  public final AppCompatEditText etMetricUnitHeight;

  @NonNull
  public final AppCompatEditText etMetricUnitWeight;

  @NonNull
  public final AppCompatEditText etUsUnitHeightFeet;

  @NonNull
  public final AppCompatEditText etUsUnitHeightInch;

  @NonNull
  public final AppCompatEditText etUsUnitWeight;

  @NonNull
  public final LinearLayout llDiplayBMIResult;

  @NonNull
  public final LinearLayout llMetricUnitsView;

  @NonNull
  public final LinearLayout llUnitsView;

  @NonNull
  public final LinearLayout llUsUnitsHeight;

  @NonNull
  public final LinearLayout llUsUnitsView;

  @NonNull
  public final RadioButton rbMetricUnits;

  @NonNull
  public final RadioButton rbUsUnits;

  @NonNull
  public final RadioGroup rgUnits;

  @NonNull
  public final TextInputLayout tilMetricUnitHeight;

  @NonNull
  public final TextInputLayout tilMetricUnitWeight;

  @NonNull
  public final TextInputLayout tilUsUnitHeightFeet;

  @NonNull
  public final TextInputLayout tilUsUnitHeightInch;

  @NonNull
  public final TextInputLayout tilUsUnitWeight;

  @NonNull
  public final Toolbar toolbarBmiActivity;

  @NonNull
  public final TextView tvBMIDescription;

  @NonNull
  public final TextView tvBMIType;

  @NonNull
  public final TextView tvBMIValue;

  @NonNull
  public final TextView tvYourBMI;

  private ActivityBmiBinding(@NonNull RelativeLayout rootView, @NonNull Button btnCalculateUnits,
      @NonNull AppCompatEditText etMetricUnitHeight, @NonNull AppCompatEditText etMetricUnitWeight,
      @NonNull AppCompatEditText etUsUnitHeightFeet, @NonNull AppCompatEditText etUsUnitHeightInch,
      @NonNull AppCompatEditText etUsUnitWeight, @NonNull LinearLayout llDiplayBMIResult,
      @NonNull LinearLayout llMetricUnitsView, @NonNull LinearLayout llUnitsView,
      @NonNull LinearLayout llUsUnitsHeight, @NonNull LinearLayout llUsUnitsView,
      @NonNull RadioButton rbMetricUnits, @NonNull RadioButton rbUsUnits,
      @NonNull RadioGroup rgUnits, @NonNull TextInputLayout tilMetricUnitHeight,
      @NonNull TextInputLayout tilMetricUnitWeight, @NonNull TextInputLayout tilUsUnitHeightFeet,
      @NonNull TextInputLayout tilUsUnitHeightInch, @NonNull TextInputLayout tilUsUnitWeight,
      @NonNull Toolbar toolbarBmiActivity, @NonNull TextView tvBMIDescription,
      @NonNull TextView tvBMIType, @NonNull TextView tvBMIValue, @NonNull TextView tvYourBMI) {
    this.rootView = rootView;
    this.btnCalculateUnits = btnCalculateUnits;
    this.etMetricUnitHeight = etMetricUnitHeight;
    this.etMetricUnitWeight = etMetricUnitWeight;
    this.etUsUnitHeightFeet = etUsUnitHeightFeet;
    this.etUsUnitHeightInch = etUsUnitHeightInch;
    this.etUsUnitWeight = etUsUnitWeight;
    this.llDiplayBMIResult = llDiplayBMIResult;
    this.llMetricUnitsView = llMetricUnitsView;
    this.llUnitsView = llUnitsView;
    this.llUsUnitsHeight = llUsUnitsHeight;
    this.llUsUnitsView = llUsUnitsView;
    this.rbMetricUnits = rbMetricUnits;
    this.rbUsUnits = rbUsUnits;
    this.rgUnits = rgUnits;
    this.tilMetricUnitHeight = tilMetricUnitHeight;
    this.tilMetricUnitWeight = tilMetricUnitWeight;
    this.tilUsUnitHeightFeet = tilUsUnitHeightFeet;
    this.tilUsUnitHeightInch = tilUsUnitHeightInch;
    this.tilUsUnitWeight = tilUsUnitWeight;
    this.toolbarBmiActivity = toolbarBmiActivity;
    this.tvBMIDescription = tvBMIDescription;
    this.tvBMIType = tvBMIType;
    this.tvBMIValue = tvBMIValue;
    this.tvYourBMI = tvYourBMI;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBmiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBmiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bmi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBmiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCalculateUnits;
      Button btnCalculateUnits = rootView.findViewById(id);
      if (btnCalculateUnits == null) {
        break missingId;
      }

      id = R.id.etMetricUnitHeight;
      AppCompatEditText etMetricUnitHeight = rootView.findViewById(id);
      if (etMetricUnitHeight == null) {
        break missingId;
      }

      id = R.id.etMetricUnitWeight;
      AppCompatEditText etMetricUnitWeight = rootView.findViewById(id);
      if (etMetricUnitWeight == null) {
        break missingId;
      }

      id = R.id.etUsUnitHeightFeet;
      AppCompatEditText etUsUnitHeightFeet = rootView.findViewById(id);
      if (etUsUnitHeightFeet == null) {
        break missingId;
      }

      id = R.id.etUsUnitHeightInch;
      AppCompatEditText etUsUnitHeightInch = rootView.findViewById(id);
      if (etUsUnitHeightInch == null) {
        break missingId;
      }

      id = R.id.etUsUnitWeight;
      AppCompatEditText etUsUnitWeight = rootView.findViewById(id);
      if (etUsUnitWeight == null) {
        break missingId;
      }

      id = R.id.llDiplayBMIResult;
      LinearLayout llDiplayBMIResult = rootView.findViewById(id);
      if (llDiplayBMIResult == null) {
        break missingId;
      }

      id = R.id.llMetricUnitsView;
      LinearLayout llMetricUnitsView = rootView.findViewById(id);
      if (llMetricUnitsView == null) {
        break missingId;
      }

      id = R.id.llUnitsView;
      LinearLayout llUnitsView = rootView.findViewById(id);
      if (llUnitsView == null) {
        break missingId;
      }

      id = R.id.llUsUnitsHeight;
      LinearLayout llUsUnitsHeight = rootView.findViewById(id);
      if (llUsUnitsHeight == null) {
        break missingId;
      }

      id = R.id.llUsUnitsView;
      LinearLayout llUsUnitsView = rootView.findViewById(id);
      if (llUsUnitsView == null) {
        break missingId;
      }

      id = R.id.rbMetricUnits;
      RadioButton rbMetricUnits = rootView.findViewById(id);
      if (rbMetricUnits == null) {
        break missingId;
      }

      id = R.id.rbUsUnits;
      RadioButton rbUsUnits = rootView.findViewById(id);
      if (rbUsUnits == null) {
        break missingId;
      }

      id = R.id.rgUnits;
      RadioGroup rgUnits = rootView.findViewById(id);
      if (rgUnits == null) {
        break missingId;
      }

      id = R.id.tilMetricUnitHeight;
      TextInputLayout tilMetricUnitHeight = rootView.findViewById(id);
      if (tilMetricUnitHeight == null) {
        break missingId;
      }

      id = R.id.tilMetricUnitWeight;
      TextInputLayout tilMetricUnitWeight = rootView.findViewById(id);
      if (tilMetricUnitWeight == null) {
        break missingId;
      }

      id = R.id.tilUsUnitHeightFeet;
      TextInputLayout tilUsUnitHeightFeet = rootView.findViewById(id);
      if (tilUsUnitHeightFeet == null) {
        break missingId;
      }

      id = R.id.tilUsUnitHeightInch;
      TextInputLayout tilUsUnitHeightInch = rootView.findViewById(id);
      if (tilUsUnitHeightInch == null) {
        break missingId;
      }

      id = R.id.tilUsUnitWeight;
      TextInputLayout tilUsUnitWeight = rootView.findViewById(id);
      if (tilUsUnitWeight == null) {
        break missingId;
      }

      id = R.id.toolbar_bmi_activity;
      Toolbar toolbarBmiActivity = rootView.findViewById(id);
      if (toolbarBmiActivity == null) {
        break missingId;
      }

      id = R.id.tvBMIDescription;
      TextView tvBMIDescription = rootView.findViewById(id);
      if (tvBMIDescription == null) {
        break missingId;
      }

      id = R.id.tvBMIType;
      TextView tvBMIType = rootView.findViewById(id);
      if (tvBMIType == null) {
        break missingId;
      }

      id = R.id.tvBMIValue;
      TextView tvBMIValue = rootView.findViewById(id);
      if (tvBMIValue == null) {
        break missingId;
      }

      id = R.id.tvYourBMI;
      TextView tvYourBMI = rootView.findViewById(id);
      if (tvYourBMI == null) {
        break missingId;
      }

      return new ActivityBmiBinding((RelativeLayout) rootView, btnCalculateUnits,
          etMetricUnitHeight, etMetricUnitWeight, etUsUnitHeightFeet, etUsUnitHeightInch,
          etUsUnitWeight, llDiplayBMIResult, llMetricUnitsView, llUnitsView, llUsUnitsHeight,
          llUsUnitsView, rbMetricUnits, rbUsUnits, rgUnits, tilMetricUnitHeight,
          tilMetricUnitWeight, tilUsUnitHeightFeet, tilUsUnitHeightInch, tilUsUnitWeight,
          toolbarBmiActivity, tvBMIDescription, tvBMIType, tvBMIValue, tvYourBMI);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
